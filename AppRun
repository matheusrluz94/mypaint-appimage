#!/bin/bash

export MYPAINT_ENV_CLEAN="$(env)"

DIR="`dirname \"$0\"`" 
DIR="`( cd \"$DIR\" && readlink -f $(pwd) )`"
echo "DIR: $DIR"
export APPDIR=$DIR

export PYTHONHOME=$DIR/usr/
export PATH=$DIR/usr/bin:$PATH

source "$APPDIR/apprun-helper.sh"
save_environment
make_temp_libdir
link_libraries
echo "AILIBDIR=$AILIBDIR"

init_environment

fix_libxcb_dri3
fix_stdlibcxx
#fix_fontconfig
fix_library "libfontconfig"
fix_library "libfreetype"

export APPDIRS=$AILIBDIR:$APPDIRS

init_gtk

#export XDG_CONFIG_DIRS=$DIR/usr/share:$XDG_CONFIG_DIRS
export XDG_DATA_DIRS=$DIR/usr/share:$XDG_DATA_DIRS:/usr/local/share:/usr/share
export GI_TYPELIB_PATH=$DIR/usr/lib/girepository-1.0

if [ -e /etc/fonts/fonts.conf ]; then
  export FONTCONFIG_PATH=/etc/fonts
fi

run_hooks

# Set Adwaita theme explicitly, but allow it to be overridden
# by setting GTK_THEME when starting the appimage, in which
# case it is up to the user to set light or dark themes directly.
#
# Setting the theme explicitly avoids css-compatibility
# problems with older gtk3 versions on the host systems.
if [ -z "$GTK_THEME" ]; then
    echo "No explicit user theme set"
    # Helper returns 0 for dark theme, 1 for ordinary theme.
    # Set the path to let it find the required mypaint libs.
    PP="$APPDIR/usr/lib/mypaint/:$PYTHONPATH"
    if PYTHONPATH="$PP" python "$APPDIR/gtk-theme-helper.py" "$@"; then
	export GTK_THEME="Adwaita:dark"
    else
	export GTK_THEME="Adwaita"
    fi
else
    echo "GTK_THEME already set explicitly, we respect that."
fi

# Set GTK_LOCALEDIR so our patched version of libgtk can
# pick up the bundled .mo files
export GTK_LOCALEDIR=$APPDIR/usr/share/locale

python $DIR/usr/bin/mypaint "$@"
EXIT_CODE=$?

rm -rf "$AILIBDIR"

exit $EXIT_CODE
